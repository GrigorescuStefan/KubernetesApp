apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: backend
  name: backend
  namespace: {{ .Values.namespace }}
spec:
  replicas: 2
  selector:
    matchLabels:
      app: backend
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: "25%"
      maxUnavailable: "25%"
  template:
    metadata:
      labels:
        app: backend
    spec:
      affinity:
        podAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchExpressions:
              - key: app
                operator: In
                values:
                - postgresql
            topologyKey: "kubernetes.io/hostname"
      containers:
      - image: grigorescustefan/backend:v2
        name: backend
        env:
        - name: POSTGRES_DB
          valueFrom:
            secretKeyRef:
              name: env-secrets
              key: POSTGRES_DB
        - name: POSTGRES_USER
          valueFrom:
            secretKeyRef:
              name: env-secrets
              key: POSTGRES_USER
        - name: POSTGRES_PASSWORD
          valueFrom:
            secretKeyRef:
              name: env-secrets
              key: POSTGRES_PASSWORD
        - name: DB_HOST
          value: postgresql
        ports:
        - containerPort: 5000
        resources: 
          requests:
            memory: "75Mi"
            cpu: "15m"
          limits: 
            memory: "75Mi"
            cpu: "15m"
        livenessProbe:
          tcpSocket:
            port: 5000
          initialDelaySeconds: 15
          periodSeconds: 10
        readinessProbe:
          tcpSocket:
            port: 5000
          initialDelaySeconds: 20
          periodSeconds: 10
        startupProbe:
          tcpSocket:
            port: 5000
          initialDelaySeconds: 30
          periodSeconds: 10
status: {}